name: Build and Deploy

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  backend-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[backend]') || github.event_name == 'push'
    defaults:
      run:
        working-directory: ./backend
    steps:
      # Run only if backend files changed
      - name: Check for backend changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'backend/**'

      - name: Checkout code
        if: steps.changes.outputs.backend == 'true'
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: steps.changes.outputs.backend == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build backend
        if: steps.changes.outputs.backend == 'true'
        run: |
          npm ci
          npm run build

      - name: Install Railway CLI
        if: steps.changes.outputs.backend == 'true'
        run: npm install -g @railway/cli

      - name: Deploy backend to Railway
        if: steps.changes.outputs.backend == 'true'
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: railway up --detach --service ${{ secrets.RAILWAY_SERVICE_ID }}

  frontend-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[frontend]') || github.event_name == 'push'
    defaults:
      run:
        working-directory: ./frontend
    steps:
      # Run only if frontend files changed
      - name: Check for frontend changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'

      - name: Checkout code
        if: steps.changes.outputs.frontend == 'true'
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: steps.changes.outputs.frontend == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build frontend
        if: steps.changes.outputs.frontend == 'true'
        run: |
          npm ci
          tsc --noEmit --skipLibCheck
          npm run build
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}

      - name: Deploy frontend to Vercel
        if: steps.changes.outputs.frontend == 'true'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
